# -*- coding: utf-8 -*-
"""De-Stress Chatbot.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1nJOL3jGeZyfNRaxrWqK26mLz4VQd7xZo

# Funciones
"""
"""# Librerias"""

#!pip install covid
from covid import Covid
import string
import random
import nltk
import pandas as pd
import numpy as np
import textwrap
import cv2
import speech_recognition as SRG
import time
import sys

st = SRG.Recognizer()

"""#Bases de Datos"""

#!git clone https://github.com/ChatBotChallengeCdCMX/ChatBotForCovidDe-stress.git

Hombres = pd.read_csv('D:/GitHub/Chatbot/BasesDeDatos/nombreshombres .csv')
Mujeres = pd.read_csv('D:/GitHub/Chatbot/BasesDeDatos/nombresmujeres.csv')
Hombres = list(Hombres.iloc[:,0])
Mujeres = list(Mujeres.iloc[:,0])
Nombres = Hombres + Mujeres
Musica = pd.read_csv('D:/GitHub/Chatbot/BasesDeDatos/Music.csv')
Musica = pd.DataFrame(Musica)
categorias_musica = list(pd.unique(Musica['terms']))
Videos = pd.read_csv('D:/GitHub/Chatbot/BasesDeDatos/YTVideos.csv')
Videos = pd.DataFrame(Videos)
categorias_videos = list(pd.unique(Videos['category']))
Libros = pd.read_csv('D:/GitHub/Chatbot/BasesDeDatos/booksdataset.csv')
Libros = pd.DataFrame(Libros)
categorias_libros = list(pd.unique(Libros['category']))
Wiki = pd.read_csv('D:/GitHub/Chatbot/BasesDeDatos/WIKI.csv')
Wikis = pd.DataFrame(Wiki)
name_wikis = list(pd.unique(Wikis['Name']))
categorias_wikis = list(pd.unique(Wikis['Vertical1']))
Artic = pd.read_csv('D:/GitHub/Chatbot/BasesDeDatos/ArxivDataClean.csv')
Artic = pd.DataFrame(Artic)
VJ = pd.read_csv('D:/GitHub/Chatbot/BasesDeDatos/VGClean.csv')
VJ = pd.DataFrame(VJ)
categorias_vj = list(pd.unique(VJ['Genre']))
categorias2_vj = list(pd.unique(VJ['Platform']))
Netflix = pd.read_csv('D:/GitHub/Chatbot/BasesDeDatos/netflix_titlesClean.csv')
Netflix_p = pd.DataFrame(Netflix[Netflix['type']=='Movie'])
categorias_netp = list(pd.unique(Netflix_p['listed_in']))
Netflix_s = pd.DataFrame(Netflix[Netflix['type']=='TV Show'])
categorias_nets = list(pd.unique(Netflix_s['listed_in']))
Type_netflix = list(pd.unique(Netflix['type']))
Inv = pd.read_csv('D:/GitHub/Chatbot/BasesDeDatos/InvestigadoresSNIClean.csv')
Inv = pd.DataFrame(Inv)
categorias_inv = list(pd.unique(Inv['Área del Conocimiento']))
Area_inv = list(pd.unique(Inv['Área del Conocimiento']))


"""# Listas de palabras frases y categorias"""

OP_ENTRETENIMIENTO = ["videos", "peliculas", "series", "musica", "libros","videojuegos","juegos"]
OP_ACADEMICO = ["articulo", "investigador", "investigadores", "articulos", "definiciones"]

SALUDOS_IN = ['Hola! Soy MMN Bot, mi especialidad es dar recomendaciones! ¿Que tal va tu día?', 'Hola! ¿Qué tál te sientes hoy?', 'Que onda, soy MMN Bot! ¿Como te llamas?']
SALUDOS = ['hello', 'hi', 'hey', 'hola', 'welcome', 'bonjour', 'greetings', 'que onda', 'holi']
SALUDOS_RESP = ["Hola, es cool hablar contigo!", 'Gusto en conocerte!',  "Hey - ¡Vamos a platicar un poco!"]

PREGUNTA_1 = ["¿Qué quisieras que te recomendara, tengo la sección de entretenimiento y académico", "Muy bien, continuemos! ¿Buscas algo académico o de entretenimiento?", "Me caes bien, puedo recomendarte algo académico o algo de entretenimiento, ¿cuál prefieres?", "Sos la ostía, tengo para vosostros algo de entretenimiento o algo académico, elige..."]

LEER_NOMBRES = Nombres
DECIR_NOMBRES = ['gusto en conocerte,  vamoa platicar :D', 'esta bien curado tu nombre, es un gusto.', ", ese nombre mola!, es un gusto conocerte." ]

LEER_MUSICA = categorias_musica


LEER_LIBROS = ['no me gusta tanto','poco', 'no tanto', 'casi no', 'mas o menos', 'mucho', 'bastante', 'me encanta leer']

NOMBRES_LIBROS = categorias_libros

LEER_VIDEOS = ['entretenimiento', 'peliculas', 'estilo', 'comedia', 'tecnología', 'blogs', 'deportes','activismo', 'noticias', 'gaming', 'educación', 'animales', 'autos', 'viajes', 'ciencia']

NOMBRES_VIDEOS = dict(zip(LEER_VIDEOS, categorias_videos))
#NOMBRES_VIDEOS['science'] = NOMBRES_VIDEOS['tech']

#---LEER_SERIES = ['entretenimiento', 'peliculas', 'estilo', 'comedia', 'tecnología', 'blogs', 'deportes','activismo', 'noticias', 'gaming', 'educación', 'animales', 'autos', 'viajes', 'ciencia']

#---NOMBRES_SERIES = dict(zip(LEER_SERIES, categorias_videos))

LEER_INV = ['fisica','matematicas','tierra','biologia','quimica', 'medicina', 'salud', 'humanidades','conducta', 'sociales', 'biotecnologia','agropecuarias','ingenierias']
DIC_INV = {'fisica': categorias_inv[4], 'matematicas': categorias_inv[4], 'tierra': categorias_inv[4], 'biologia':categorias_inv[1], 'quimica':categorias_inv[1], 'medicina':categorias_inv[3], 'salud': categorias_inv[3], 'humanidades':categorias_inv[6], 'conducta':categorias_inv[6], 'sociales':categorias_inv[2], 'biotecnologia':categorias_inv[0], 'agropecuarias':categorias_inv[0], 'ingenierias':categorias_inv[5]}

LEER_PELIS = ['documentales','accion','comedia','palomera','drama', 'terror', 'clasicos', 'ficcion','infantil']
DIC_PELIS = {'documentales': [categorias_netp[x] for x in [0,9,26,27]], 'accion':[categorias_netp[x] for x in [1,2,16,18,24,32]], 'comedia':[categorias_netp[x] for x in [3,4,6,11,13,14,28,31,34]],'palomera':[categorias_netp[x] for x in [5]], 'drama':[categorias_netp[x] for x in [7,8,15,21,23,25,33]],'terror':[categorias_netp[x] for x in [10,19,20]],'clasicos':[categorias_netp[x] for x in [12]],'ficcion':[categorias_netp[x] for x in [17]],'infantil':[categorias_netp[x] for x in [22,29,30]]}

LEER_SERIES = ['crimen','novela','infantil','documentales','clasicos', 'reality']
DIC_SERIES = {'crimen': [categorias_nets[x] for x in [0,5,7,9,12,14,19]], 'novela':[categorias_nets[x] for x in [1,3,4,8,11,16,15]], 'infantil':[categorias_nets[x] for x in [2,18]],'documentales':[categorias_nets[x] for x in [6,17]], 'clasicos':[categorias_nets[x] for x in [10,13]],'reality':[categorias_nets[x] for x in [20,21]]}

LEER_VJ_P = ['xbox','360','one','play','station','playstation', 'wii', 'psp', 'computadora', 'compu', 'pc']
DIC_VJ_P = {'xbox': [categorias2_vj[x] for x in [4,13,17]], '360': [categorias2_vj[x] for x in [4,13,17]],'one': [categorias2_vj[x] for x in [4,13,17]], 'playstation':[categorias2_vj[x] for x in [5,6,10,12,16]],'play':[categorias2_vj[x] for x in [5,6,10,12,16]],'station':[categorias2_vj[x] for x in [5,6,10,12,16]],'psp':[categorias2_vj[x] for x in [5,6,10,12,16]], 'wii':[categorias2_vj[x] for x in [0,19]],'computadora':[categorias2_vj[x] for x in [14]],'compu':[categorias2_vj[x] for x in [14]],'pc':[categorias2_vj[x] for x in [14]]}
LEER_VJ_G = ['deportes','plataforma','carreras','roles','rompecabezas','variado', 'disparos', 'simulacion', 'accion', 'peleas', 'aventura', "estrategia"]
DIC_VJ_G = NOMBRES_VIDEOS = dict(zip(LEER_VJ_G, categorias_vj))

LEER_CATEGORIAS = ['libros', 'libro', 'musica', 'videos', 'video', 'si', 'leer']
DIC_LIBROS = {'no me gusta tanto': 'short', 'poco': 'short', 'no tanto': 'short','casi no': 'short','mas o menos': 'medium', 'mucho': 'large',  'bastante': 'large','me encanta leer': 'large' }
LEER_COVID = ['cuarentena', 'covid', 'coronavirus', 'encerramiento', 'd 19', 'sars', 'corona']


LEER_COMPU = ['python', 'código', 'computadora', 'algoritmo', ]
DECIR_COMPU = ["Python es de lo que estoy hecho.", \
            "¿Sabías que estoy hecho con código!?", \
            "Las computadoras son mágicas", \
            "¿Crees que podría pasar el Test de Turing?"]

LEER_CIENT = ['turing', 'hopper', 'neumann', 'lovelace']
DECIR_CIENT = ['fue asombroso!', 'hizo muchas cosas importantes!', 'es alguien del que que valdria la pena saber mas :).']
NOMBRES_CIENT = {'turing': 'Alan', 'hopper': 'Grace', 'neumann': 'John von', 'lovelace': 'Ada'}

LEER_BROMAS = ['divertido', 'gracioso', 'ja', 'jaja', 'jajaja', 'xD']
DECIR_BROMAS = ['ja!', 'jajaja!', 'XD', 'lol']

LEER_NEGACIONES = ['matlab', 'java', 'C++']
DECIR_NEGACIONES = ["No, lo siento. :(, No me gustaria hablar por ahora de eso."]

NEGATIVAS = ['no', "no no", 'nop', 'nunca', "negativo", "ninguno"]

DESCONOCIDO = ['Bien.', 'Okay', 'Mm?', 'Si!', 'bien...', 'Ñam', 'Hum']
CHATEAR = ['¿Qué te gustaría hacer ahora?, puedo recomedarte algo de música, libros o algun video enretenido, ¿Cuál te gustaría?', 'Veamos, ¿Qué tipo de música te gusta?', '¿Quieres algo para relajarte?', 'Puedo buscar algo de buena música para ti,¿Qué genero te gusta?', 'Tengo algunos videos entretenidos!, escoge una categoría :D','¿Te gustan los videos? Tengo de diferentes categorías', 'además, tengo aqui algunos de mis libros favoritos, te gusta leer mucho, mas o menos, o solo un poco?',
            '¿Sobre que debería buscar?']

RESP_PREG = "Soy demasiado timido para a responder eso, jeje. De que otra cosa te gustaria una reomendación?"


def es_pregunta(entrada):
  for i in entrada:
    if i == '?':
      salida = True
    else:
      salida = False
  return salida

import unicodedata
def quitar_acentos(string):
    acentos = set(map(unicodedata.lookup, ('COMBINING ACUTE ACCENT', 'COMBINING GRAVE ACCENT', 'COMBINING TILDE')))
    chars = [c for c in unicodedata.normalize('NFD', string) if c not in acentos]
    return unicodedata.normalize('NFC', ''.join(chars))

def remover_puntuacion(entrada):
  out_string = ""
  for i in entrada:
    if i not in string.punctuation:
      out_string += i
  return out_string

def preparar_texto(entrada):
  temp_string = entrada.lower()
  temp_string = remover_puntuacion(temp_string)
  temp_string = quitar_acentos(temp_string)
  lista_salida = temp_string.split()
  return lista_salida

def responder_echo(entrada, numero_bromas,espaciador):
  if entrada != None:
    echo_salida = (entrada + espaciador) * numero_bromas
  else:
    echo_salida = None
  return echo_salida

def selector(lista_entrada, checar_lista, regresar_lista):
  salida = None
  for i in lista_entrada:
    if i in checar_lista:
      salida = random.choice(regresar_lista)
      break
  return salida

def concatenar_string(string1, string2, separador):
  salida = string1 + separador + string2
  return salida

def lista_a_cadena(lista_entrada, separador):
  salida = lista_entrada[0]
  for i in lista_entrada[1:]:
    salida = concatenar_string(salida, i, separador)
  return salida

def terminar_chat(lista_entrada):
  if 'adios' in lista_entrada:
    salida = True
  else:
    salida = False
  return salida

def esta_en_lista(lista_uno, lista_dos): #Checar si cualqueir elemento esta en dos listas.

    for elemento in lista_uno:
        if elemento in lista_dos:
            return True
    return False

def encontrar_en_lista(lista_uno, lista_dos): # Find and return an element from list_one that is in list_two, or None otherwise.
    for elemento in lista_uno:
        if elemento in lista_dos:
            return elemento
    return None

def contar_puntos(entrada):
  p = 0
  h = []
  for i in entrada:
    o = i.count('.')
    if o == 1:
      p += 1
      if p == 5:
        break
    h.append(i)
  h.append('.')
  return h

def escuchar_mensaje(tunombre="INPUT:", w=False):
    texto_salida_audio = None
    mensaje = None
    with SRG.Microphone() as s:
        print(chr(27)+"[1;31m"+'Estoy escuchando...')
        entrada_audio = st.record(s, duration=5)
        # sys.stdout.write("\033[F")
        try:
            print(chr(27)+"[1;31m"+"Procesando...")
            texto_salida_audio = st.recognize_google(entrada_audio,language="es")
            # print(texto_salida_audio)
            print(chr(27)+"[1;31m"+"Reconocido.")
            print(chr(27)+"[1;30m"+str(tunombre) +': \t' + str(texto_salida_audio))
            if w:
                mensaje = texto_salida_audio.split() #w se usa para Wikipedia
                mensaje = [mensaje.capitalize() for mensaje in mensaje]
            else:
                mensaje = preparar_texto(texto_salida_audio)
        except:
            print(chr(27)+"[1;31m"+"No he podido escucharte, intenta de nuevo")
            mensaje = escuchar_mensaje(tunombre)
    return mensaje

### Caso 2 ###
def videos(tunombre):
    msg_salida = random.choice(["¿Qué tipos de videos te gustarían?, tengo de:\n", "Genial!, tengo estas categorías:\n", "Muy bien, revisaré mi colección favorita de videos, podriamos empezar por: \n"])
    opciones_videos = " - Comedia\n - Tecnología\n - Películas\n - Estilo\n - Entretenimiento\n - Blogs\n - Deportes\n - Activismo\n - Noticias\n - Gaiming\n - Educación\n - Animales\n - Autos\n - Viajes\n - Ciencia"
    msg_salida = msg_salida + opciones_videos
    print(chr(27)+"[1;36m"+'CHATBOT:')

    for i in textwrap.wrap(str(msg_salida), 130):
      print(chr(27)+"[1;36m"+ i)

    msg = escuchar_mensaje(tunombre)
    name = encontrar_en_lista(msg, LEER_VIDEOS)
    if name:
        ran = np.random.randint(0,len(Videos[Videos['category']==NOMBRES_VIDEOS[name]]))
        title = Videos[Videos['category']==NOMBRES_VIDEOS[name]][['title', 'video_id']]
        msg_salida = (
            'Si te gusta {} yo te recomendaría este vídeo "{}" , lo puedes ver en https://www.youtube.com/watch?v={}'.format(name,
                title.iloc[ran][0], title.iloc[ran][1]))
    else:
        msg_salida = random.choice(DESCONOCIDO)

    print(chr(27)+"[1;36m"+'CHATBOT:')

    for i in textwrap.wrap(str(msg_salida), 130):
      print(chr(27)+"[1;36m"+ i)


    return

def peliculas(tunombre):
    msg_salida = random.choice(["¿Qué clase de películas te gustan?, tengo\n", "Genial!, tengo estas categorías\n", "Muy bien, entretenimiento, podriamos empezar por: \n"])
    opciones_peliculas = " - documentales\n - accion\n - comedia\n - palomera\n - drama\n - terror\n - clasicos\n - ficcion\n - infantil"
    msg_salida = msg_salida + opciones_peliculas
    print(chr(27)+"[1;36m"+'CHATBOT:')

    for i in textwrap.wrap(str(msg_salida), 130):
      print(chr(27)+"[1;36m"+ i)

    msg = escuchar_mensaje(tunombre)
    name = encontrar_en_lista(msg, LEER_PELIS)
    if name:
        select = random.choice(DIC_PELIS[name])
        ran = np.random.randint(0,len(Netflix_p[Netflix_p['listed_in']==select]))
        datos = Netflix_p[Netflix_p['listed_in']==select][['title', 'duration','description']].iloc[ran]
        msg_salida = (
            'Si te gusta la categoría de {} yo te recomendaría la película "{}", que dura {}, trata de: {}'.format(name,
                datos[0], datos[1], datos[2]))
    else:
        msg_salida = random.choice(DESCONOCIDO)
    print(chr(27)+"[1;36m"+'CHATBOT:')

    for i in textwrap.wrap(str(msg_salida), 130):
      print(chr(27)+"[1;36m"+ i)


    return

def series(tunombre):
    msg_salida = random.choice(["¿Que te gustaría de entretenimiento?, tengo\n", "Genial!, tengo estas categorías\n", "Muy bien, entretenimiento, podriamos empezar por: \n"])
    categorias_entretenimiento = " - Videos\n - Películas\n - Series\n - Música\n - Libros"
    msg_salida = msg_salida + categorias_entretenimiento
    print(chr(27)+"[1;36m"+'CHATBOT:')

    for i in textwrap.wrap(str(msg_salida), 130):
      print(chr(27)+"[1;36m"+ i)

    msg = escuchar_mensaje(tunombre)
    name = encontrar_en_lista(msg, LEER_SERIES)
    if name:
        select = random.choice(DIC_SERIES[name])
        ran = np.random.randint(0,len(Netflix_s[Netflix_s['listed_in']==select]))
        datos = Netflix_s[Netflix_s['listed_in']==select][['title', 'duration','description']].iloc[ran]
        msg_salida = (
            'Si te gusta la categoría de {} yo te recomendaría la serie "{}", que tiene {}, trata de: {}'.format(name,
                datos[0], datos[1], datos[2]))
    else:
        msg_salida = random.choice(DESCONOCIDO)

    print(chr(27)+"[1;36m"+'CHATBOT:')

    for i in textwrap.wrap(str(msg_salida), 130):
      print(chr(27)+"[1;36m"+ i)


    return

def musica(tunombre):
    msg_salida = random.choice(["¿Qué genero de música prefieres?\n", "Genial!, ¿Qué música te gusta?\n", "La música es genial!, podriamos empezar por decirme tu genero favorito \n"])

    print(chr(27)+"[1;36m"+'CHATBOT:')

    for i in textwrap.wrap(str(msg_salida), 130):
      print(chr(27)+"[1;36m"+ i)

    msg = escuchar_mensaje(tunombre)
    name = encontrar_en_lista(msg, LEER_MUSICA)
    if name:
        ran = np.random.randint(0,len(Musica[Musica['terms']==name]))
        title = Musica[Musica['terms']==name][['release.name', 'artist.name']]
        msg_salida = (
            'Si te gusta el {} te recomiendo esta canción "{}" de {}'.format(name,
                title.iloc[ran][0], title.iloc[ran][1]))
    else:
        msg_salida = random.choice(DESCONOCIDO)

    print(chr(27)+"[1;36m"+'CHATBOT:')

    for i in textwrap.wrap(str(msg_salida), 130):
      print(chr(27)+"[1;36m"+ i)


    return

def libros(tunombre):
    msg_salida = random.choice(["¿Qué tanto te gusta leer?, ¿mucho, poco?\n", "Genial!, podría sugerirte un libro corto, medianito o algo largo.\n", "Muy bien, libros, ¿qué tan grandes?: \n"])
    categorias_entretenimiento = " - Videos\n - Películas\n - Series\n - Música\n - Libros"
    msg_salida = msg_salida + categorias_entretenimiento
    print(chr(27)+"[1;36m"+'CHATBOT:')

    for i in textwrap.wrap(str(msg_salida), 130):
      print(chr(27)+"[1;36m"+ i)

    msg = escuchar_mensaje(tunombre)
    name = encontrar_en_lista(msg, LEER_LIBROS)
    if name:
        ran = np.random.randint(0,len(Libros[Libros['category']==DIC_LIBROS[name]]))
        title = Libros[Libros['category']==DIC_LIBROS[name]][['title', 'authors', 'num_pages']]
        msg_salida = (
         'Este libro "{}" suena bien para ti, fue escrito por {} y tiene {} páginas.'.format(
             title.iloc[ran][0], title.iloc[ran][1], title.iloc[ran][2]))
    else:
        msg_salida = random.choice(DESCONOCIDO)

    print(chr(27)+"[1;36m"+'CHATBOT:')

    for i in textwrap.wrap(str(msg_salida), 130):
      print(chr(27)+"[1;36m"+ i)


    return

def juegos(tunombre):
    msg_salida = random.choice(["¿Qué clase de videojuegos te gustan?, ¿qué plataforma usas?\n", "Genial!, dime una categoría y plataforma.\n", "Muy bien, libros, ¿de qué tipo, qué consola?: \n"])
    categorias_videojuegos = " Categorías:\t Consolas:\n - Acción\t + Xbox\n - Aventuras\t + PlayStation\n - Carreras\t + Wii\n - Deportes\t + Computadora\n - Disparos\n - Estrategia\n - Peleas\n - Plataforma\n - Roles\n - Rompecabezas\n - Simulacion\n - Variado"
    # msg_salida = msg_salida + categorias_videojuegos
    print(chr(27)+"[1;36m"+'CHATBOT:')

    for i in textwrap.wrap(str(msg_salida), 130):
      print(chr(27)+"[1;36m"+ i)
    print("\n"+chr(27)+"[1;36m"+'CHATBOT\n:'+categorias_videojuegos)
    msg = escuchar_mensaje(tunombre)
    keyp = encontrar_en_lista(msg, LEER_VJ_P)
    keyg = encontrar_en_lista(msg, LEER_VJ_G)
    if keyp and keyg:
        Keyp = random.choice(DIC_VJ_P[keyp])
        Keyg = DIC_VJ_G[keyg]
        VJG = VJ[VJ['Genre'] == Keyg]
        VJG = VJG[VJG['Platform'] == Keyp]
        ran = np.random.randint(0,len(VJG))
        datos = VJG[['Name','Genre', 'Platform']].iloc[ran]
        msg_salida = (
            'Si te gusta la categoría de {} yo te recomendaría "{}", para {}.'.format(keyg,
                datos[0], datos[2]))
    else:
        msg_salida = "Hum... creo que no capté algo de lo que dijiste, ¿podrías repetirlo?"
        print(chr(27)+"[1;36m"+'CHATBOT:')

        for i in textwrap.wrap(str(msg_salida), 130):
          print(chr(27)+"[1;36m"+ i)
        juegos(tunombre)

    print(chr(27)+"[1;36m"+'CHATBOT:')

    for i in textwrap.wrap(str(msg_salida), 130):
      print(chr(27)+"[1;36m"+ i)


    return

def articulos(tunombre):
    msg_salida = random.choice(["Me agrada que quieras descubrir conocimeinto, di una palabra clave (en inglés)\n", "Genial! dime una palabra clave (en inglés), para encontrar uno interesante\n", "Muy bien, busquemos uno interesante, dime una palabra clave que podria interesarte: \n"])
    print(chr(27)+"[1;36m"+'CHATBOT:')

    for i in textwrap.wrap(str(msg_salida), 130):
      print(chr(27)+"[1;36m"+ i)

    subartic = []

    w = escuchar_mensaje(tunombre,w=True)
    print(chr(27)+"[1;36m"+'Buscando alguna coincidencia...')
    w = random.choice(w)
    print(w)
    subArtic = Artic[Artic['title'].str.contains(w)]
    # print(subArtic)
    if subartic != None:
        ran = np.random.randint(0,len(subArtic))
        print(ran)
        title = Artic[['title']].iloc[ran][0]
        id = Artic[['id']].iloc[ran][0]
        msg_salidas = (
            'Un artículo relacionado a {} que encontré para ti: {}'.format(w, title) +
             ' Puedes leerlo completo en: https://arxiv.org/abs/{}'.format(id))
    else:
        msg_salida = random.choice(DESCONOCIDO)

    print(chr(27)+"[1;36m"+'CHATBOT:')

    for i in textwrap.wrap(str(msg_salida), 130):
      print(chr(27)+"[1;36m"+ i)

    return

def wikis(tunombre):
    msg_salida = random.choice(["¿Que te gustaría saber?, preguntame algún concepto\n", "Genial!, ¿te interesa saber la definición de algo en particular?\n", "Muy bien, podriamos empezar por algo que quieras saber... \n"])
    print(chr(27)+"[1;36m"+'CHATBOT:')

    for i in textwrap.wrap(str(msg_salida), 130):
      print(chr(27)+"[1;36m"+ i)

    w = escuchar_mensaje(w=True)
    name = encontrar_en_lista(w, name_wikis)
    if name:
        ran = np.random.randint(0,len(Wikis[Wikis['Name']==name]))
        title = Wikis[Wikis['Name']==name][['Name', 'WikiDescription','WikiUrl']]
        msg_salidas = (
            'Aquí esta la definición de {} que encontré para ti: {}'.format(
                title.iloc[ran][0], lista_a_cadena(contar_puntos(title.iloc[ran][1]), '')) +
             ' Puedes leer más de ello en: {}'.format(
                title.iloc[ran][2]))
    else:
        msg_salida = random.choice(DESCONOCIDO)
    print(chr(27)+"[1;36m"+'CHATBOT:')

    for i in textwrap.wrap(str(msg_salida), 130):
      print(chr(27)+"[1;36m"+ i)

      return

def investigadores(tunombre):
    msg_salida = random.choice(["¿Que area del conocimeinto te agrada en este momento?, estas son:\n", "Genial!, las areas en las que podria encontrar a alguien son\n", "Muy bien, en que area estas interesado: \n"])
    categorias_inv = " - Fisica, Matemáticas y Ciencias de la Tierra\n - Biología y Química\n - Medicina y Ciencias de la Salud\n - Humanidades y Ciencias de la Conducta\n - Ciencias Sociales\n - Biotecnología y Ciencias Agropecuarias\n - Ingenierias"
    msg_salida = msg_salida + categorias_inv
    print(chr(27)+"[1;36m"+'CHATBOT:')

    for i in textwrap.wrap(str(msg_salida), 130):
      print(chr(27)+"[1;36m"+ i)

    msg = escuchar_mensaje(tunombre)
    name = encontrar_en_lista(msg, Area_inv)
    ran = np.random.randint(0,len(Inv[Inv['Área del Conocimiento']==Area_inv[name]]))
    datos = Inv[Inv['Área del Conocimiento']==DIC_INV[name]][['Nombre Completo', 'Área del Conocimiento', 'Institución de Adscripción']].iloc[ran]
    msg_salida = (
        'Si te gusta el area de {} yo te recomendaría contactar o buscar el trabajo desarrollado por "{}", adscrito a {}'.format(datos[1], datos[0], datos[2]))
    if name == None:
        msg_salida = random.choice(DESCONOCIDO)

    print(chr(27)+"[1;36m"+'CHATBOT:')

    for i in textwrap.wrap(str(msg_salida), 130):
      print(chr(27)+"[1;36m"+ i)


    return


### Switchs ###

def switcher_entretenimiento(key,tunombre):
    switch_entretenimiento = {
        "videos": videos,
        "peliculas": peliculas,
        "series": series,
        "musica": musica,
        "libros": libros,
        "videojuegos": juegos,
        "juegos": juegos
    }
    funcion = switch_entretenimiento.get(key)
    return funcion(tunombre)

def switcher_academico(key,tunombre):
    switch_academico = {
        "articulos": articulos,
        "articulo": articulos,
        "investigadores": investigadores,
        "investigador": investigadores,
        "definicion": wikis,
        "definiciones": wikis,
    }
    funcion = switch_academico.get(key)
    return funcion(tunombre)


### Casos 1###
def entretenimiento(tunombre):
    msg_salida = random.choice(["¿Que te gustaría de entretenimiento?, tengo\n", "Genial!, tengo estas categorías\n", "Muy bien, entretenimiento, podriamos empezar por: \n"])
    categorias_entretenimiento = " - Videos\n - Películas\n - Series\n - Música\n - Libros"
    # msg_salida = msg_salida + categorias_entretenimiento
    print(chr(27)+"[1;36m"+'CHATBOT:')

    for i in textwrap.wrap(str(msg_salida), 130):
      print(chr(27)+"[1;36m"+ i)
    print("\n"+chr(27)+"[1;36m"+'CHATBOT:'+categorias_entretenimiento)
    msg = escuchar_mensaje(tunombre)
    key = encontrar_en_lista(msg, OP_ENTRETENIMIENTO)
    switcher_entretenimiento(key,tunombre)
    return


def academico(tunombre):
    msg_salida = random.choice(["Tengo distintas recomendacioens académicas, algunas son:\n", "Genial!, tengo estas categorías\n", "Muy bien, el ámbito académico, podriamos empezar por: \n"])
    categorias_academico = " - Artículos\n - Investigadores\n - Definiciones"
    # msg_salida = msg_salida + categorias_academico
    print(chr(27)+"[1;36m"+'CHATBOT:')

    for i in textwrap.wrap(str(msg_salida), 130):
      print(chr(27)+"[1;36m"+ i)
    print("\n"+chr(27)+"[1;36m"+'CHATBOT:\n'+categorias_academico)
    msg = escuchar_mensaje(tunombre)
    key = encontrar_en_lista(msg, OP_ACADEMICO)
    switcher_academico(key,tunombre)
    return

def switcher_general(key,tunombre):
    switch_general = {
        "entretenimiento": entretenimiento,
        "academico": academico
    }
    funcion = switch_general.get(key)
    return funcion(tunombre)

def chatear():
    """función principal para tener un chat."""
    print(chr(27)+"[1;34m"+'Qué tál! Soy tu amigo MMN Bot! ¿Cuál es tu nombre?: \n')
    chat = True
    tunombre = None
    with SRG.Microphone() as s:
            print('Estoy escuchando...')
            entrada_audio = st.record(s, duration=5)
            sys.stdout.write("\033[F")
            try:
                texto_salida = st.recognize_google(entrada_audio,language="es")
            except:
                print("No he podido escucharte, intenta de nuevo")
    if tunombre != None:
      msg = texto_salida#input(chr(27)+"[1;30m"+str(tunombre) +': \t') \\ chr(27)+"[1;30m"+str(tunombre) +': \t' + texto_salida
      print(chr(27)+"[1;30m"+str(tunombre) +': \t' + msg)
    else:
      msg = texto_salida#input(chr(27)+"[1;30m"+'INPUT : \t')
      print(chr(27)+"[1;30m"+'INPUT : \t' + msg)
      n = msg.upper()   # n sirve para la función de nombres
      n = n.split()       # en lugar de la funcion preparar_texto
      for i in n:
        i = [i]
        if esta_en_lista(i, LEER_NOMBRES):
            tunombre = encontrar_en_lista(i, LEER_NOMBRES)
            msg_salida =(lista_a_cadena([tunombre.capitalize(),
                                        selector(i, LEER_NOMBRES, DECIR_NOMBRES)], ' '))
    while chat:
        msg = None
        preg1 = random.choice(PREGUNTA_1)
        print(chr(27)+"[1;36m"+'CHATBOT: \t'+ preg1)
        msg = escuchar_mensaje(tunombre)
        msg_salida = None
        # salidas = []

        # pregunta = es_pregunta(msg)  #Solo para el escrito

        if terminar_chat(msg):
            msg_salida = 'Adios!'
            chat = False

            #Aquí empiezan los switch, casos.
        # pregunta1 : msg = escuchar mensaje
# msg = encontrar_en_lista(msg, ["entretenimiento","academico"])
# switch_general[msg]
# switch_general {
#     "entretenimiento": entretenimiento()
#         pregunta2 : msg = escuchar mensaje
#         key = encontrar_en_lista(msg, OP_ENTRETENIMIENTO)
#         switcher_entretenimiento[key]
#             videos: funcionvideos
#             2: peliculas
#     "academico": academico()
# }
        primer_mensaje = encontrar_en_lista(msg, ["entretenimiento","academico"])
        switcher_general(primer_mensaje, tunombre)



        # if not msg_salida and pregunta:
        #     msg_salida = RESP_PREG


        # if not msg_salida:
        #     msg_salida = random.choice(DESCONOCIDO)

        # print(chr(27)+"[1;36m"+'CHATBOT:')
        #
        # for i in textwrap.wrap(str(msg_salida), 130):
        #   print(chr(27)+"[1;36m"+ i)

        # if msg_salida != 'Adios!':
        #   print('\n' +chr(27)+"[1;36m"+'CHATBOT: \t'+random.choice(CHATEAR))
